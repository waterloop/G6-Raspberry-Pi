# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import services_pb2 as services__pb2


class RequiredCommandsStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Begin = channel.unary_unary(
                '/g6_cli_utility.RequiredCommands/Begin',
                request_serializer=services__pb2.Data.SerializeToString,
                response_deserializer=services__pb2.Response.FromString,
                )
        self.End = channel.unary_unary(
                '/g6_cli_utility.RequiredCommands/End',
                request_serializer=services__pb2.Data.SerializeToString,
                response_deserializer=services__pb2.Response.FromString,
                )
        self.Autopilot = channel.unary_unary(
                '/g6_cli_utility.RequiredCommands/Autopilot',
                request_serializer=services__pb2.Data.SerializeToString,
                response_deserializer=services__pb2.Response.FromString,
                )
        self.Reset = channel.unary_unary(
                '/g6_cli_utility.RequiredCommands/Reset',
                request_serializer=services__pb2.Data.SerializeToString,
                response_deserializer=services__pb2.Response.FromString,
                )
        self.Brake = channel.unary_unary(
                '/g6_cli_utility.RequiredCommands/Brake',
                request_serializer=services__pb2.Data.SerializeToString,
                response_deserializer=services__pb2.Response.FromString,
                )
        self.Accelerate = channel.unary_unary(
                '/g6_cli_utility.RequiredCommands/Accelerate',
                request_serializer=services__pb2.Data.SerializeToString,
                response_deserializer=services__pb2.Response.FromString,
                )
        self.Decelerate = channel.unary_unary(
                '/g6_cli_utility.RequiredCommands/Decelerate',
                request_serializer=services__pb2.Data.SerializeToString,
                response_deserializer=services__pb2.Response.FromString,
                )
        self.HeartBeat = channel.unary_unary(
                '/g6_cli_utility.RequiredCommands/HeartBeat',
                request_serializer=services__pb2.Beat.SerializeToString,
                response_deserializer=services__pb2.Response.FromString,
                )
        self.SendStateData = channel.unary_unary(
                '/g6_cli_utility.RequiredCommands/SendStateData',
                request_serializer=services__pb2.StateData.SerializeToString,
                response_deserializer=services__pb2.Response.FromString,
                )


class RequiredCommandsServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Begin(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def End(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Autopilot(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Reset(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Brake(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Accelerate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Decelerate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HeartBeat(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendStateData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RequiredCommandsServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Begin': grpc.unary_unary_rpc_method_handler(
                    servicer.Begin,
                    request_deserializer=services__pb2.Data.FromString,
                    response_serializer=services__pb2.Response.SerializeToString,
            ),
            'End': grpc.unary_unary_rpc_method_handler(
                    servicer.End,
                    request_deserializer=services__pb2.Data.FromString,
                    response_serializer=services__pb2.Response.SerializeToString,
            ),
            'Autopilot': grpc.unary_unary_rpc_method_handler(
                    servicer.Autopilot,
                    request_deserializer=services__pb2.Data.FromString,
                    response_serializer=services__pb2.Response.SerializeToString,
            ),
            'Reset': grpc.unary_unary_rpc_method_handler(
                    servicer.Reset,
                    request_deserializer=services__pb2.Data.FromString,
                    response_serializer=services__pb2.Response.SerializeToString,
            ),
            'Brake': grpc.unary_unary_rpc_method_handler(
                    servicer.Brake,
                    request_deserializer=services__pb2.Data.FromString,
                    response_serializer=services__pb2.Response.SerializeToString,
            ),
            'Accelerate': grpc.unary_unary_rpc_method_handler(
                    servicer.Accelerate,
                    request_deserializer=services__pb2.Data.FromString,
                    response_serializer=services__pb2.Response.SerializeToString,
            ),
            'Decelerate': grpc.unary_unary_rpc_method_handler(
                    servicer.Decelerate,
                    request_deserializer=services__pb2.Data.FromString,
                    response_serializer=services__pb2.Response.SerializeToString,
            ),
            'HeartBeat': grpc.unary_unary_rpc_method_handler(
                    servicer.HeartBeat,
                    request_deserializer=services__pb2.Beat.FromString,
                    response_serializer=services__pb2.Response.SerializeToString,
            ),
            'SendStateData': grpc.unary_unary_rpc_method_handler(
                    servicer.SendStateData,
                    request_deserializer=services__pb2.StateData.FromString,
                    response_serializer=services__pb2.Response.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'g6_cli_utility.RequiredCommands', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RequiredCommands(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Begin(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g6_cli_utility.RequiredCommands/Begin',
            services__pb2.Data.SerializeToString,
            services__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def End(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g6_cli_utility.RequiredCommands/End',
            services__pb2.Data.SerializeToString,
            services__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Autopilot(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g6_cli_utility.RequiredCommands/Autopilot',
            services__pb2.Data.SerializeToString,
            services__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Reset(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g6_cli_utility.RequiredCommands/Reset',
            services__pb2.Data.SerializeToString,
            services__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Brake(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g6_cli_utility.RequiredCommands/Brake',
            services__pb2.Data.SerializeToString,
            services__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Accelerate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g6_cli_utility.RequiredCommands/Accelerate',
            services__pb2.Data.SerializeToString,
            services__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Decelerate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g6_cli_utility.RequiredCommands/Decelerate',
            services__pb2.Data.SerializeToString,
            services__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def HeartBeat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g6_cli_utility.RequiredCommands/HeartBeat',
            services__pb2.Beat.SerializeToString,
            services__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendStateData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g6_cli_utility.RequiredCommands/SendStateData',
            services__pb2.StateData.SerializeToString,
            services__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
